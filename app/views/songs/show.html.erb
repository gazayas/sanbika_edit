<script>
// これをapplication.jsに置いた方がいいかな
window.onload = function() {
  
  $(document).ready(function () {
    $('em').each(function () {
      var txt = $(this).html();
      $(this).html(txt.replace(/&nbsp;/g, " "));
      var html = this.innerHTML;
      $(this).replaceWith('<span class="chord_lines">' + html + '</span>');
      console.log("全ての<strong>を返す：");
      console.log(this);
    });
  });

  var chords = document.getElementsByClassName('chord_lines');
  for (var y = 0; y < chords.length; y++){
    var chord_string = chords[y].innerHTML;
    var chord_string_for_array = chords[y].innerHTML;
    chord_string_for_array = chord_string_for_array.replace(/\s+/g,' '); // 空白をとって一個だけのスペースと代わる
    var chord_array = chord_string_for_array.split(" ");
    for (var i = 0; i < chord_array.length; i ++) {
      if ((/\//).test(chord_array[i]) == true) {
        var new_array = chord_array[i].split("/");
        chord_array[i] = new_array;
      }
    }

    // newest_arrayとかを変えましょうww
    // もっと分かりやすく
    var newest_array = [];
    for (var i = 0; i < chord_array.length; i++) {
      if (typeof chord_array[i] == "string") {
        newest_array.push(chord_array[i]);
      } else {
        // これをfor文に入れた方がいいかな
        newest_array.push(chord_array[i][0]);
        newest_array.push(chord_array[i][1]);
      }
    }

    for (var i = 0; i < newest_array.length; i++) {
      var re = new RegExp(newest_array[i], "g");
      var invalid_re = new RegExp(newest_array[i] + "</span>"); // </span>がもう既に付けられた場合
      // var invalid_re2 = new RegExp(chord_array[i] + "/"); // スラッシュコードの場合
      if ((invalid_re).test(chord_string) == false) {
          chord_string = chord_string.replace(re,'<span class="chord">' + newest_array[i] + '</span>');
          console.log(chord_string);
      }
    }
    chords[y].innerHTML = chord_string; // その行を実装します
  }
  // これで、全てのコードのnameが定義されるから、key_change.jsを行うだけ
  var spans = document.getElementsByClassName('chord');
  for (var i = 0; i < spans.length; i++) {
    var note = spans[i].innerHTML; // １行上の spans[i].innerHTMLをこれにする
    spans[i].setAttribute("name", note);
    spans[i].innerHTML = replace_mark(note);
  }

}


</script>

<div id="song_wrapper">
  <h1 id="show_song_title"><%= @song.title %></h1>
  <p>作曲者：<%= @song.artist %></p>
  <!-- <span id="chord_holder"></span> -->
  <span id="original_key"><%= @song.key %></span><br/> <!-- visibility: hidden か <input type="hidden"/> -->
  <% notes = Notes() %>
  <%= select_tag(:key_select,  options_for_select(notes[0], @song.key), :onchange => "trigger();", :id => 'key_select') %>
  <div id="body"><%= simple_format(@song.body) %></div>
  チャートの作者：<%= link_to @user.name + "さん", @user, :id => 'user_link' %>
  <p><%= @song.video %></p>

  <%= link_to "歌の印刷", action: "print" %><br/>

  <% if current_user %>
    <% if current_user == @user || current_user.admin == true %>
      <%= link_to "歌の編集", edit_user_song_path(@user, @song) %><br/>
      <%= link_to "歌の削除", [@user, @song], method: :delete, data: { confirm: "本当に削除しますか？" } %>
    <% end %>
  <% end %>
</div>
